
3. ************************
(a). ¿Qué ocurre si en la primera sección se quitan las llaves al nombre de la macro espacio?
No se hace un manejo sobre los elementos \t y \n por lo que se imprime un salto 
de más en cada entrada.

(b). ¿qué ocurre si en la segunda seccion se quitan las llaves a las macros?
Se toma literalmente las cadenas "esps", "digito" y "letra" para que se lleve a cabo 
la acción léxica.

(c). ¿cómo se escribe un comentario en flex?
Entre las cadenas '/*' y '*/'.

(d). ¿qué se guarda en yytext?
El texto que se ingresa por la consola.

(e). ¿qué pasa al ejecutar el programa e introducir cadenas de número y de dígitos por la consola?
Se va analizando lo que se ingreso como cadena y de acuerdo a la acción léxica definida para la expresión regular es lo que se lleva a cabo.
En este caso cada que encuentra una letra imprime el mensaje "Encontre una letra" y si es un número "Encontre un número".

(f). ¿qué ocurre si introducimos caracteres como "*" en la consola?
Dado que no se define una regla para otros caracteres se da como regreso el mismo caracter ingresado.

4. ************************
Los cambios se realizaron en el archivo 'programa1-1.l'

5. ************************
Pasos.
Durante los pasos se generan unos warnings por el match de las definiciones.

(a). ¿Qué pasa con las palabras reservadas?
Solo se reconocerán las palabras reservadas si se pasa la definición de {id}+ al final de las definiciones.
En otro caso las palabras reservadas no se manejarán.

(b). ¿Se comporta de forma correcta con las palabras reservadas?
Sí, se comportan de buena manera con un orden correcto de las definiciones.

(c). ¿Qué sucede cuando se cambia el orden de la expresión regular {id}?
Ya funciona el análisis correctamente.

(d). ¿Cambio el comportamiento del programa?
Sí, al poner al final la expresion id, se puede pueden manejar correctamente las palabras reservadas definidas.

(e). ¿Será importante la precedencia o prioridad de las expresiones regulares en lex?
Sí. Parece que se va revisando las expresiones con forme van apareciendo, hasta que hace match con alguna.

6. ************************
(a). ¿Qué para con los errores?
Se manejan con el mensaje "Ha ocurrido un error léxico:"

(b). ¿Qué pasa si se cambia de posición la expresión regular "."?
Se continúa manejando los errores léxicos.

7. Resultados y conclusiones.

En la parte 5 del código, no se podía generar el archivo para generar el ejecutable, 
al parecer por el orden en el que se encontraban las definiciones léxicas. Una vez que pase 
la expresión {id} al final de las definiciones de acción léxicas, se pudo generar el ejecutable.

Pareciera que si hay una determinada prioridad sobre las definiciones de acción, puesto 
que si se dejaba la expresion {id} primero sobre las palabras reservadas estás no se podían usar.

